//---------------------------------------------------------------------------
#pragma hdrstop

#include "CCola_Lsitas.h"
//---------------------------------------------------------------------------
Cola_Lista :: ColaLista() {
	L = new ListaPtr();
}
//---------------------------------------------------------------------------
bool Cola_Lista :: vacia() {
	return L->Vacio();
}
//---------------------------------------------------------------------------
void Cola_Lista :: poner(int e) {
	if (vacia()) {
		L->Inserta(L->Fin(), e);
	}
	else {
		int ul = L->Recupera(L->Fin());
		L->Inserta(L->Fin(), ul);
		L->Modifica(L->Fin(), e);
	}
}
//---------------------------------------------------------------------------
void Cola_Lista :: sacar(int &e) {
	if (!vacia()) {
		e = L->Recupera(L->Primero());
		L->Suprime(L->Primero());
	}
}
//---------------------------------------------------------------------------
void Cola_Lista :: poner1(int e) { // Metodos del ingeniero
	L->Inserta(L->Primero(), e);
}
//---------------------------------------------------------------------------
void Cola_Lista :: poner_frente1(int e) { // Metodos del ingeniero
	int p = L->Recupera(L->Fin());
	L->Inserta(L->Fin(), e);
	L->Suprime(L->Fin());
	L->Inserta(L->Fin(), p);
}
//---------------------------------------------------------------------------
void Cola_Lista :: sacar1(int &e) { // Metodos del ingeniero
	if (!vacia()) {
		e = L->Recupera(L->Fin());
		L->Suprime(L->Fin());
	}
}
//---------------------------------------------------------------------------
int Cola_Lista :: primero() {
	if (!vacia()) {
		return L->Recupera(L->Primero());
	}
}
//---------------------------------------------------------------------------
string Cola_Lista :: toStr() {
	ColaLista* aux = new ColaLista();
	string s = "<<";
	while (!vacia()) {
		int e;
		sacar1(e);
		aux->poner1(e);
		s = s + to_string(e);
		if (!vacia())
			s = s + ",";
	}
	s = s + "<<";
	while (!aux->vacia()) {
		int e;
		aux->sacar1(e);
		poner1(e);
	}
	return s;
}
//---------------------------------------------------------------------------
int Cola_Lista :: ultimo() {
	if (!vacia()) {
		return L->Recupera(L->Fin());
	}
}
//---------------------------------------------------------------------------
void Cola_Lista :: sacar_final(int& e) {
	if (!vacia()) {
		e = L->Recupera(L->Fin());
		L->Suprime(L->Fin());
	}
}
//---------------------------------------------------------------------------
void Cola_Lista :: poner_frente(int e) {
	L->Inserta(L->Primero(), e);

}
//---------------------------------------------------------------------------
#pragma package(smart_init)

